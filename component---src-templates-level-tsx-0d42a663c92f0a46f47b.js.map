{"version":3,"file":"component---src-templates-level-tsx-0d42a663c92f0a46f47b.js","mappings":"4MA0DA,UApDgD,SAAH,GAItC,IAAD,EAHJA,EAAI,EAAJA,KACAC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SAEMC,EAAQH,EAAKI,OAAOC,MACpBC,GAAkC,QAAtB,EAAAN,EAAKO,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACzCC,EAAoB,GAQ1B,OAPAP,EAAMQ,KAAI,SAAAC,GACR,IAAMC,EAAsB,GAC5BA,EAAUC,KAAKF,EAAKG,KAAKC,YAAYC,OACjCJ,EAAUK,SAASjB,EAAYgB,QACjCP,EAASI,KAAKF,EAAKG,KAEvB,IAEE,gBAAC,IAAM,CAACb,SAAUA,EAAUO,MAAOH,GACjC,gBAAC,KAAG,CAACG,MAAK,GAAKR,EAAYgB,QAC3B,2BACE,sBAAIE,QAAM,GAAElB,EAAYgB,OAAW,KAAGP,EAASU,OAAO,2BAEtD,uBACEC,UAAU,OACVC,MAAO,CACLC,aAAc,SACdC,SAAU,OACVC,OAAQ,sBACRC,UAAW,QAGb,2BACE,0BACGhB,EAASC,KAAI,SAAAI,GACZ,OACE,sBACEO,MAAO,CACLK,SAAU,QACVC,UAAW,SAGb,gBAAC,EAAAC,KAAI,CAACC,GAAI,IAAMf,EAAKgB,MAAOhB,EAAKC,YAAYP,OAGnD,QAOd,C","sources":["webpack://gatsby-starter-tailwind-mdx-blog/./src/templates/level.tsx"],"sourcesContent":["import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql, Link } from \"gatsby\"\nimport { Seo } from \"../components/common\"\nimport { INode, TagPageProps } from \"@/definitions\"\n\nconst TagPageTemplate: React.FC<TagPageProps> = ({\n  data,\n  pageContext,\n  location,\n}) => {\n  const posts = data.allMdx.edges\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const nodeList: INode[] = []\n  posts.map(post => {\n    const levelList: string[] = []\n    levelList.push(post.node.frontmatter.level)\n    if (levelList.includes(pageContext.level)) {\n      nodeList.push(post.node)\n    }\n  })\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={`${pageContext.level}`} />\n      <div>\n        <h1 hidden>{pageContext.level}</h1>총 {nodeList.length}개의 글이\n        있습니다. 아래로 스크롤해보세요.\n        <div\n          className=\"grid\"\n          style={{\n            gridAutoFlow: \"column\",\n            overflow: \"auto\",\n            height: \"calc(100vh - 200px)\",\n            marginTop: \"3vh\",\n          }}\n        >\n          <div>\n            <ul>\n              {nodeList.map(node => {\n                return (\n                  <li\n                    style={{\n                      fontSize: \"1.5em\",\n                      listStyle: \"none\",\n                    }}\n                  >\n                    <Link to={`/` + node.slug}>{node.frontmatter.title}</Link>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query TagPages {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: frontmatter___title, order: DESC }) {\n      edges {\n        node {\n          slug\n          frontmatter {\n            title\n            level\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["data","pageContext","location","posts","allMdx","edges","siteTitle","site","siteMetadata","title","nodeList","map","post","levelList","push","node","frontmatter","level","includes","hidden","length","className","style","gridAutoFlow","overflow","height","marginTop","fontSize","listStyle","Link","to","slug"],"sourceRoot":""}